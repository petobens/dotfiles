# Note: On Mac install latest tmux using `brew install tmux --HEAD`; on Linux
# build it from source or use linuxbrew

# Preamble {{{

# Remap prefix to Ctrl-a or Ctr-t depending on OS
#  TODO: Make this to T if inside an ssh session
is_mac="uname | grep -q Darwin"
if-shell "$is_mac" "set -g prefix C-a" "set -g prefix C-a"
unbind C-b
if-shell "$is_mac" "bind C-a send-prefix" "bind C-a send-prefix"

# Reload config file with prefix + a
bind a source ~/.tmux/tmux.conf \; display-message "Conf reloaded..."

#  }}}
# Options {{{

# Enable mouse, allow scrolling selected text and don't exit copy-mode when
# releasing selection
set -g mouse on
bind-key -T root WheelUpPane select-pane -t =\; copy-mode -e\; send-keys -M
unbind -T copy-mode-vi MouseDragEnd1Pane

# Increase Scrollback/History limit
set -g history-limit 50000

# Start window and pane numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# Don't add delay when pressing meta or escape keys
set -s escape-time 0

# Renumber window automatically when a window is closed
set-option -g renumber-windows on

# Show the session name and the window title in iTerm corresponding tab and
# title
set -g set-titles on
set-option -g set-titles-string "#{session_name} - #W"

# Emacs key bindings in tmux command prompt
set -g status-keys emacs

# Use vim mode in copy mode
setw -g mode-keys vi

# Don't show `Activity in window N` message
set-option -g visual-activity off
set-window-option -g monitor-activity on

# Send focus events
set -g focus-events on

#  }}}
# Bindings {{{

# Smart pane switching with awareness of vim splits (use vim-tmux-navigator
# plugin in vim!)
#  TODO: Consider removing ssh
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|ssh|mosh|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

# Restore original C-l mapping (clear screen)
bind C-l send-keys 'C-l'

# Split pane using v and h (in the same directory from where they are called)
# For horizontal splits we automatically set the size to rougly 10 lines
unbind '"'
unbind %
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"\; resize-pane -y 10

# Increase or decrease pane height with h,j,k and l (the -r flag makes it
# repeatable i.e no need to press prefix key again and again)
bind -r j resize-pane -D 3
bind -r k resize-pane -U 3
bind -r h resize-pane -L 3
bind -r l resize-pane -R 3
bind = select-layout -E

# Create new buffer/tab (actually a window) with kill it (also if pane) with c
bind b new-window -c "#{pane_current_path}"
bind c kill-pane

# Rename window
bind-key r command-prompt 'rename-window %%'

# Move windows
bind -r C-h swap-window -t -1
bind -r C-l swap-window -t +1

# Choose window (window tree navigation)
bind-key w choose-window

# Pane movement (merge and break)
bind-key m choose-window "join-pane -v -s "%%""  # horizontal merge
bind-key C-b break-pane

# From here on we set vim copy bindings (note: we set the insert and command
# mode mappings directly in our bash profile!)
# Go the beginning and end of line in copy mode
bind -Tcopy-mode-vi H send -X start-of-line
bind -Tcopy-mode-vi L send -X end-of-line

# Do visual and block selection as in vim (for block selection we need to press
# C-v + space and then start our selection)
unbind-key -Tcopy-mode-vi v
bind -Tcopy-mode-vi v send -X begin-selection
bind -Tcopy-mode-vi 'C-v' send -X rectangle-toggle

# Unbind Enter since we rebind it for copying
unbind-key -Tcopy-mode-vi Enter

# Unbind p since we rebind it to paste
unbind p
unbind n
# Use prefix + C-p to go to the previous window (and C-n to the next one)
bind -r C-p previous-window
bind -r C-n next-window

#  }}}
# Colors {{{

# Use xterm-256color with italics (install it with tic and check that the new
# terminfo is shown in both or either /lib/terminfo/x and $HOME/.terminfo/x/
# directories)
set -g default-terminal "tmux-256color"
# The following is (probably) only need on OSX
set -as terminal-overrides ',xterm*:sitm=\E[3m'

# Enable 24-bit color support (requires tmux >= 2.2)
# To check if this is enabled run `tmux info | grep Tc`.
set-option -ga terminal-overrides ",xterm-256color:Tc"

# Pane border (use same color for active and foreground)
set -g pane-border-fg '#282c34'
set -g pane-active-border-fg '#282c34'

# Command mode
set -g message-fg '#abb2bf'
set -g message-bg '#282c34'

# Copy mode
set-window-option -g mode-fg '#abb2bf'
set-window-option -g mode-bg '#3b4048'

# The following seems to be needed to avoid strange highlighting of windows with
# activity (basically it disables such hl (even if present in the statusline))
set -g window-status-activity-attr bold

#  }}}
# Status line {{{

# Reload status every second and set lengths
set -g status-interval 1
set -g status-left-length 32
set -g status-right-length 156

# Background and foreground colors
set -g status-fg '#abb2bf'
set -g status-bg '#282c34'

# Actually set the statusline (consistent with vim and airline)
set -g status-left \
'#{?client_prefix,#[fg=#24272e]#[bg=#98c379]#[bold] T '\
'#[fg=#98c379]#[bg=#d0d0d0]#[nobold]#[fg=#282c34]#[bg=#d0d0d0]#[bold],'\
'#[fg=#282c34]#[bg=#d0d0d0]#[bold]} #S '\
'#[fg=#d0d0d0,bg=#282c34,nobold]'
set -g window-status-current-format \
'#[fg=#282c34]#[bg=#61afef]#[nobold]'\
'#[fg=#24272e,bg=#61afef,noreverse,bold] #I:#W '\
'#[fg=#61afef,bg=#282c34,nobold]'
set -g window-status-format \
'#{?window_bell_flag,'\
'#[fg=#e06c75]#[bg=#282c34]#[nobold]'\
'#[fg=#e06c75]#[bg=#282c34]#[bold] #I:#W '\
'#[fg=#282c34]#[bg=#e06c75]#[nobold],'\
'#[fg=#abb2bf]#[bg=#282c34]#[nobold] #I:#W}'
set -g status-right \
'#[fg=#828997,bg=#282c34,nobold]#{battery_icon}  #{battery_percentage} '\
'#[fg=#828997,bg=#282c34,nobold]'\
'#[fg=#828997,bg=#282c34,nobold]  %H:%M #[fg=#3b4048,bg=#282c34,nobold]'\
'#[fg=#abb2bf,bg=#3b4048,nobold] %d %b %Y #[fg=#d0d0d0,bg=#3b4048,nobold]'\
'#[fg=#282c34,bg=#d0d0d0,bold] #h '

#  }}}
#  OS Specific {{{

# Load OS specific extra settings
if-shell "$is_mac" "source ~/.tmux/tmux_mac.conf" "source ~/.tmux/tmux_linux.conf"

#  }}}
#  Plugins {{{

# Auto install tmux plugin manager if it is not installed
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

# List of plugins
set -g @tpm_plugins ' \
    tmux-plugins/tpm \
    tmux-plugins/tmux-copycat \
    tmux-plugins/tmux-battery \
    tmux-plugins/tmux-resurrect \
    laktak/extrakto \
    wfxr/tmux-fzf-url \
'

# Install plugins if not installed
setenv -g TMUX_PLUGIN_MANAGER_PATH '$HOME/.tmux/plugins/'
if "test ! -d ~/.tmux/plugins/tmux-copycat" \
   "run '~/.tmux/plugins/tpm/bin/install_plugins'"

# Battery icons (note: these require nerd fonts)
set -g @batt_charged_icon 
set -g @batt_charging_icon 
set -g @batt_full_charge_icon 
set -g @batt_high_charge_icon 
set -g @batt_medium_charge_icon 
set -g @batt_low_charge_icon 
set -g @batt_attached_icon 

# Extrakto
set -g @extrakto_key "tab"
set -g @extrakto_split_size "15"

# Initialize TMUX plugin manager (this must be the last line of the conf file)
run-shell '~/.tmux/plugins/tpm/tpm'

#  }}}
