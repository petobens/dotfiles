[global]

# Which monitor should the notifications be displayed on (see next one)
monitor = 0

# Display notification on focused monitor.  Possible modes are:
#   mouse: follow mouse pointer
#   keyboard: follow window with keyboard focus
#   none: don't follow anything
#
# "keyboard" needs a window manager that exports the
# _NET_ACTIVE_WINDOW property.
# This should be the case for almost all modern window managers.
#
# If this option is set to mouse or keyboard, the monitor option
# will be ignored.
follow = keyboard

# The geometry of the window:
#   [{width}]x{height}[+/-{x}+/-{y}]
# The geometry of the message window.
# The height is measured in number of notifications everything else
# in pixels.  If the width is omitted but the height is given
# ("-geometry x2"), the message window expands over the whole screen
# (dmenu-like).  If width is 0, the window expands to the longest
# message displayed.  A positive x is measured from the left, a
# negative from the right side of the screen.  Y is measured from
# the top and down respectively.
# The width can be negative.  In this case the actual width is the
# screen width minus the width defined in within the geometry option.
geometry = "600x5-0+58"

# Show how many messages are currently hidden (because of geometry).
indicate_hidden = yes

# Shrink window if it's smaller than the width.  Will be ignored if
# width is 0.
shrink = no

# The transparency of the window.  Range: [0; 100].
# This option will only work if a compositing window manager is
# present (e.g. xcompmgr, compiz, etc.).
transparency = 5

# The height of the entire notification.  If the height is smaller
# than the font height and padding combined, it will be raised
# to the font height and padding.
notification_height = 0

# Draw a line of "separator_height" pixel height between two
# notifications.
# Set to 0 to disable.
separator_height = 10

# Padding between text and separator.
padding = 12

# Horizontal padding.
horizontal_padding = 8

# Defines width in pixels of frame around the notification window.
# Set to 0 to disable.
frame_width = 2

# Defines color of the frame around the notification window.
frame_color = "#282c34"

# Define a color for the separator.
# possible values are:
#  * auto: dunst tries to find a color fitting to the background;
#  * foreground: use the same color as the foreground;
#  * frame: use the same color as the frame;
#  * anything else will be interpreted as a X color.
separator_color = frame

# Sort messages by urgency.
sort = yes

# Don't remove messages, if the user is idle (no mouse or keyboard input)
# for longer than idle_threshold seconds.
# Set to 0 to disable.
idle_threshold = 120

font = Noto Sans 11

# The spacing between lines.  If the height is smaller than the
# font height, it will get raised to the font height.
line_height = 0

# Possible values are:
# full: Allow a small subset of html markup in notifications:
#        <b>bold</b>
#        <i>italic</i>
#        <s>strikethrough</s>
#        <u>underline</u>
#
#        For a complete reference see
#        <http://developer.gnome.org/pango/stable/PangoMarkupFormat.html>.
#
# It's important to note that markup inside the format option will be parsed
# regardless of what this is set to.
markup = full

# The format of the message.  Possible variables are:
#   %a  appname
#   %s  summary
#   %b  body
#   %i  iconname (including its path)
#   %I  iconname (without its path)
#   %p  progress value if set ([  0%] to [100%]) or nothing
#   %n  progress value if set without any extra characters
# Markup is allowed
format = "<b>%s</b>\n%b"

# Alignment of message text.
# Possible values are "left", "center" and "right".
alignment = left

# Show age of message if message is older than show_age_threshold
# seconds.
# Set to -1 to disable.
show_age_threshold = 60

# Split notifications into multiple lines if they don't fit into
# geometry.
word_wrap = yes

# Ignore newlines '\n' in notifications.
ignore_newline = no

# Merge multiple notifications with the same content
stack_duplicates = true

# Hide the count of merged notifications with the same content
hide_duplicate_count = false

# Display indicators for URLs (U) and actions (A).
show_indicators = no

# Align icons left/right/off
icon_position = right

# Scale larger icons down to this size, set to 0 to disable
max_icon_size = 64

# Paths to default icons.
icon_path = /usr/share/icons/Papirus-Dark/64x64/apps:/usr/share/icons/Papirus-Dark/64x64/categories:/usr/share/icons/Papirus-Dark/64x64/devices:/usr/share/icons/Papirus-Dark/64x64/emblems:/usr/share/icons/Papirus-Dark/64x64/mimetypes:/usr/share/icons/Papirus-Dark/64x64/places:/usr/share/icons/Papirus-Dark/64x64/status

# Should a notification popped up from history be sticky or timeout
# as if it would normally do.
sticky_history = yes

# Maximum amount of notifications kept in history
history_length = 20

# dmenu path
dmenu = rofi -dmenu -p dunst

# Browser for opening urls in context menu.
browser = chromium

# Always run rule-defined scripts, even if the notification is suppressed
always_run_script = true

# Define the title of the windows spawned by dunst
title = Dunst

# Define the class of the windows spawned by dunst
class = Dunst

# Print a notification on startup.
# This is mainly for error detection, since dbus (re-)starts dunst
# automatically after a crash.
startup_notification = false


[experimental]
per_monitor_dpi = false


[shortcuts]
close = ctrl+space
close_all = ctrl+shift+space
history = ctrl+grave
# Context menu (to operate on notification)
context = ctrl+shift+period


[urgency_low]
background = "#24272e"
foreground = "#abb2bf"
timeout = 7


[urgency_normal]
background = "#24272e"
foreground = "#abb2bf"
timeout = 7


[urgency_critical]
background = "#24272e"
foreground = "#abb2bf"
frame_color = "#e06c75"
timeout = 0

# Per app rules
[Spotify]
appname = Spotify
new_icon = Spotify
timeout = 3
